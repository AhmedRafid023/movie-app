warning: in the working copy of 'src/index.css', LF will be replaced by CRLF the next time Git touches it
[1mdiff --git a/package-lock.json b/package-lock.json[m
[1mindex 7f6667b..94d62fe 100644[m
[1m--- a/package-lock.json[m
[1m+++ b/package-lock.json[m
[36m@@ -11,6 +11,7 @@[m
         "@tailwindcss/vite": "^4.0.6",[m
         "react": "^19.0.0",[m
         "react-dom": "^19.0.0",[m
[32m+[m[32m        "react-router-dom": "^7.1.5",[m
         "react-use": "^17.6.0",[m
         "tailwindcss": "^4.0.6"[m
       },[m
[36m@@ -1524,6 +1525,12 @@[m
         "@babel/types": "^7.20.7"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/@types/cookie": {[m
[32m+[m[32m      "version": "0.6.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/@types/cookie/-/cookie-0.6.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-4Kh9a6B2bQciAhf7FSuMRRkUWecJgJu9nPnx3yzpsfXX/c50REIqpHY4C82bXP90qrLtXtkDxTZosYO3UpOwlA==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
     "node_modules/@types/estree": {[m
       "version": "1.0.6",[m
       "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz",[m
[36m@@ -2004,6 +2011,15 @@[m
       "dev": true,[m
       "license": "MIT"[m
     },[m
[32m+[m[32m    "node_modules/cookie": {[m
[32m+[m[32m      "version": "1.0.2",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/cookie/-/cookie-1.0.2.tgz",[m
[32m+[m[32m      "integrity": "sha512-9Kr/j4O16ISv8zBBhJoi4bXOYNTkFLOqSL3UDB0njXxCXNezjeyVrJyGOWtgfs/q2km1gwBcfH8q1yEGoMYunA==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=18"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/copy-to-clipboard": {[m
       "version": "3.3.3",[m
       "resolved": "https://registry.npmjs.org/copy-to-clipboard/-/copy-to-clipboard-3.3.3.tgz",[m
[36m@@ -4340,6 +4356,46 @@[m
         "node": ">=0.10.0"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/react-router": {[m
[32m+[m[32m      "version": "7.1.5",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/react-router/-/react-router-7.1.5.tgz",[m
[32m+[m[32m      "integrity": "sha512-8BUF+hZEU4/z/JD201yK6S+UYhsf58bzYIDq2NS1iGpwxSXDu7F+DeGSkIXMFBuHZB21FSiCzEcUb18cQNdRkA==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "@types/cookie": "^0.6.0",[m
[32m+[m[32m        "cookie": "^1.0.1",[m
[32m+[m[32m        "set-cookie-parser": "^2.6.0",[m
[32m+[m[32m        "turbo-stream": "2.4.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=20.0.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "react": ">=18",[m
[32m+[m[32m        "react-dom": ">=18"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependenciesMeta": {[m
[32m+[m[32m        "react-dom": {[m
[32m+[m[32m          "optional": true[m
[32m+[m[32m        }[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
[32m+[m[32m    "node_modules/react-router-dom": {[m
[32m+[m[32m      "version": "7.1.5",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-7.1.5.tgz",[m
[32m+[m[32m      "integrity": "sha512-/4f9+up0Qv92D3bB8iN5P1s3oHAepSGa9h5k6tpTFlixTTskJZwKGhJ6vRJ277tLD1zuaZTt95hyGWV1Z37csQ==",[m
[32m+[m[32m      "license": "MIT",[m
[32m+[m[32m      "dependencies": {[m
[32m+[m[32m        "react-router": "7.1.5"[m
[32m+[m[32m      },[m
[32m+[m[32m      "engines": {[m
[32m+[m[32m        "node": ">=20.0.0"[m
[32m+[m[32m      },[m
[32m+[m[32m      "peerDependencies": {[m
[32m+[m[32m        "react": ">=18",[m
[32m+[m[32m        "react-dom": ">=18"[m
[32m+[m[32m      }[m
[32m+[m[32m    },[m
     "node_modules/react-universal-interface": {[m
       "version": "0.6.2",[m
       "resolved": "https://registry.npmjs.org/react-universal-interface/-/react-universal-interface-0.6.2.tgz",[m
[36m@@ -4589,6 +4645,12 @@[m
         "semver": "bin/semver.js"[m
       }[m
     },[m
[32m+[m[32m    "node_modules/set-cookie-parser": {[m
[32m+[m[32m      "version": "2.7.1",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/set-cookie-parser/-/set-cookie-parser-2.7.1.tgz",[m
[32m+[m[32m      "integrity": "sha512-IOc8uWeOZgnb3ptbCURJWNjWUPcO3ZnTTdzsurqERrP6nPyv+paC55vJM0LpOlT2ne+Ix+9+CRG1MNLlyZ4GjQ==",[m
[32m+[m[32m      "license": "MIT"[m
[32m+[m[32m    },[m
     "node_modules/set-function-length": {[m
       "version": "1.2.2",[m
       "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",[m
[36m@@ -4994,6 +5056,12 @@[m
       "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",[m
       "license": "0BSD"[m
     },[m
[32m+[m[32m    "node_modules/turbo-stream": {[m
[32m+[m[32m      "version": "2.4.0",[m
[32m+[m[32m      "resolved": "https://registry.npmjs.org/turbo-stream/-/turbo-stream-2.4.0.tgz",[m
[32m+[m[32m      "integrity": "sha512-FHncC10WpBd2eOmGwpmQsWLDoK4cqsA/UT/GqNoaKOQnT8uzhtCbg3EoUDMvqpOSAI0S26mr0rkjzbOO6S3v1g==",[m
[32m+[m[32m      "license": "ISC"[m
[32m+[m[32m    },[m
     "node_modules/type-check": {[m
       "version": "0.4.0",[m
       "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 972d887..be434eb 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -13,6 +13,7 @@[m
     "@tailwindcss/vite": "^4.0.6",[m
     "react": "^19.0.0",[m
     "react-dom": "^19.0.0",[m
[32m+[m[32m    "react-router-dom": "^7.1.5",[m
     "react-use": "^17.6.0",[m
     "tailwindcss": "^4.0.6"[m
   },[m
[1mdiff --git a/src/App.jsx b/src/App.jsx[m
[1mindex f665655..06a0a6f 100644[m
[1m--- a/src/App.jsx[m
[1m+++ b/src/App.jsx[m
[36m@@ -1,134 +1,17 @@[m
[31m-import React, {useEffect, useState} from 'react';[m
[31m-import Search from "./components/Search.jsx";[m
[31m-import Spinner from "./components/Spinner.jsx";[m
[31m-import MovieCard from "./components/MovieCard.jsx";[m
[31m-import {useDebounce} from "react-use";[m
[31m-[m
[31m-[m
[31m-const API_BASE_URL = 'https://api.themoviedb.org/3';[m
[31m-const API_KEY = import.meta.env.VITE_TMDB_API_KEY;[m
[31m-const API_OPTIONS = {[m
[31m-    method: 'GET',[m
[31m-    headers: {[m
[31m-        accept: 'application/json',[m
[31m-        authorization: `Bearer ${API_KEY}`,[m
[31m-    }[m
[31m-}[m
[32m+[m[32mimport React from 'react';[m
[32m+[m[32mimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';[m
[32m+[m[32mimport Home from './pages/Home';[m
[32m+[m[32mimport MovieDetailsPage from './pages/MovieDetailsPage';[m
 [m
 const App = () => {[m
[31m-[m
[31m-    const [searchTerm, setSearchTerm] = useState('');[m
[31m-    const [errorMessage, setErrorMessage] = useState('');[m
[31m-    const [movieList, setMovieList] = useState([]);[m
[31m-    const [isLoading, setIsLoading] = useState(false);[m
[31m-    const [debounceSearchTerm, setDebounceSearchTerm] = useState('');[m
[31m-    const [page, setPage] = useState(1);[m
[31m-    const [totalPages, setTotalPages] = useState(1);[m
[31m-[m
[31m-[m
[31m-    //debounce the search to optimize the API Call[m
[31m-    useDebounce( () => setDebounceSearchTerm(searchTerm), 500, [searchTerm]);[m
[31m-[m
[31m-    //fetching movie data from api[m
[31m-    const fetchMovies = async ( query = '', page = 1) => {[m
[31m-        setIsLoading(true);[m
[31m-        setErrorMessage('');[m
[31m-[m
[31m-        try {[m
[31m-            const endpoint = query[m
[31m-                ? `${API_BASE_URL}/search/movie?query=${encodeURIComponent(query)}&page=${page}`[m
[31m-                : `${API_BASE_URL}/discover/movie?sort_by=popularity.desc&page=${page}`;[m
[31m-            const response = await fetch(endpoint, API_OPTIONS);[m
[31m-[m
[31m-            if(!response.ok) {[m
[31m-                throw new Error("Could not fetch movies");[m
[31m-            }[m
[31m-            const data = await response.json();[m
[31m-[m
[31m-            if(data.Response === false) {[m
[31m-                setErrorMessage('Could not fetch movies');[m
[31m-                setMovieList([]);[m
[31m-                return;[m
[31m-            }[m
[31m-[m
[31m-            // Update movie list and total pages[m
[31m-            setMovieList(data.results);[m
[31m-            setTotalPages(data.total_pages); // Set total pages from API response[m
[31m-[m
[31m-        }catch (error) {[m
[31m-            console.log(`Error fetching movies: ${error}`);[m
[31m-            setErrorMessage('Could not fetch movies. Please try again later.');[m
[31m-        }finally {[m
[31m-            setIsLoading(false);[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-[m
[31m-[m
[31m-    useEffect(() => {[m
[31m-        fetchMovies(debounceSearchTerm, page);[m
[31m-    }, [debounceSearchTerm, page]);[m
[31m-[m
[31m-[m
[31m-[m
     return ([m
[31m-        <main>[m
[31m-[m
[31m-            <div className="pattern" />[m
[31m-[m
[31m-            <div className="wrapper">[m
[31m-                <header>[m
[31m-                    <img src="./hero.png" alt="Hero Banner" />[m
[31m-                    <h1>Find <span className="text-gradient">Movies</span> You will Enjoy Without The Hassle</h1>[m
[31m-[m
[31m-                    <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />[m
[31m-                </header>[m
[31m-[m
[31m-                <section className="all-movies">[m
[31m-                    <h2 className="mt-[20px]">All Movies</h2>[m
[31m-[m
[31m-                    { isLoading ? ([m
[31m-                        <Spinner />[m
[31m-                    ) : errorMessage ? ([m
[31m-                        <p className="text-red-500">{errorMessage}</p>[m
[31m-                    ) : ([m
[31m-                        <ul>[m
[31m-                            {movieList[m
[31m-                                .map((movie) => ([m
[31m-                                <MovieCard key={movie.id} movie={movie}/>[m
[31m-                            ))}[m
[31m-                        </ul>[m
[31m-                    )}[m
[31m-[m
[31m-                    <div className="pagination">[m
[31m-                        <button[m
[31m-                            onClick={ () => {[m
[31m-                                if(page > 1) {[m
[31m-                                    setPage( prev => prev - 1);[m
[31m-                                }[m
[31m-                            }}[m
[31m-                            disabled={page === 1 || isLoading}[m
[31m-                            className="pagination-button"[m
[31m-                        >[m
[31m-                            Previous[m
[31m-                        </button>[m
[31m-                        <span className="page-number">Page {page} of {totalPages}</span>[m
[31m-                        <button[m
[31m-                            onClick={ () => {[m
[31m-                                if(page < totalPages) {[m
[31m-                                    setPage( prev => prev + 1);[m
[31m-                                }[m
[31m-                            }}[m
[31m-                            disabled={page === totalPages || isLoading}[m
[31m-                            className="pagination-button"[m
[31m-                        >[m
[31m-                            Next[m
[31m-                        </button>[m
[31m-                    </div>[m
[31m-                </section>[m
[31m-            </div>[m
[31m-        </main>[m
[31m-    )[m
[32m+[m[32m        <Router>[m
[32m+[m[32m            <Routes>[m
[32m+[m[32m                <Route path="/" element={<Home />} />[m
[32m+[m[32m                <Route path="/movie/:id" element={<MovieDetailsPage />} />[m
[32m+[m[32m            </Routes>[m
[32m+[m[32m        </Router>[m
[32m+[m[32m    );[m
 };[m
 [m
 export default App;[m
\ No newline at end of file[m
[1mdiff --git a/src/pages/Home.jsx b/src/pages/Home.jsx[m
[1mindex e69de29..e715319 100644[m
[1m--- a/src/pages/Home.jsx[m
[1m+++ b/src/pages/Home.jsx[m
[36m@@ -0,0 +1,168 @@[m
[32m+[m[32mimport React, {useEffect, useState} from 'react';[m
[32m+[m[32mimport Search from "../components/Search.jsx";[m
[32m+[m[32mimport Spinner from "../components/Spinner.jsx";[m
[32m+[m[32mimport MovieCard from "../components/MovieCard.jsx";[m
[32m+[m[32mimport {useDebounce} from "react-use";[m
[32m+[m[32mimport { Link } from 'react-router-dom';[m
[32m+[m
[32m+[m
[32m+[m[32mconst API_BASE_URL = 'https://api.themoviedb.org/3';[m
[32m+[m[32mconst API_KEY = import.meta.env.VITE_TMDB_API_KEY;[m
[32m+[m[32mconst API_OPTIONS = {[m
[32m+[m[32m    method: 'GET',[m
[32m+[m[32m    headers: {[m
[32m+[m[32m        accept: 'application/json',[m
[32m+[m[32m        authorization: `Bearer ${API_KEY}`,[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst Home = () => {[m
[32m+[m
[32m+[m
[32m+[m[32m    const [searchTerm, setSearchTerm] = useState('');[m
[32m+[m[32m    const [errorMessage, setErrorMessage] = useState('');[m
[32m+[m[32m    const [movieList, setMovieList] = useState([]);[m
[32m+[m[32m    const [isLoading, setIsLoading] = useState(false);[m
[32m+[m[32m    const [debounceSearchTerm, setDebounceSearchTerm] = useState('');[m
[32m+[m[32m    const [page, setPage] = useState(1);[m
[32m+[m[32m    const [totalPages, setTotalPages] = useState(1);[m
[32m+[m
[32m+[m
[32m+[m[32m    //debounce the search to optimize the API Call[m
[32m+[m[32m    useDebounce( () => setDebounceSearchTerm(searchTerm), 500, [searchTerm]);[m
[32m+[m
[32m+[m[32m    //fetching movie data from api[m
[32m+[m[32m    const fetchMovies = async ( query = '', page = 1) => {[m
[32m+[m[32m        setIsLoading(true);[m
[32m+[m[32m        setErrorMessage('');[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            const endpoint = query[m
[32m+[m[32m                ? `${API_BASE_URL}/search/movie?query=${encodeURIComponent(query)}&page=${page}`[m
[32m+[m[32m                : `${API_BASE_URL}/discover/movie?sort_by=popularity.desc&page=${page}`;[m
[32m+[m[32m            const response = await fetch(endpoint, API_OPTIONS);[m
[32m+[m
[32m+[m[32m            if(!response.ok) {[m
[32m+[m[32m                throw new Error("Could not fetch movies");[m
[32m+[m[32m            }[m
[32m+[m[32m            const data = await response.json();[m
[32m+[m
[32m+[m[32m            if(data.Response === false) {[m
[32m+[m[32m                setErrorMessage('Could not fetch movies');[m
[32m+[m[32m                setMovieList([]);[m
[32m+[m[32m                return;[m
[32m+[m[32m            }[m
[32m+[m
[32m+[m[32m            // Update movie list and total pages[m
[32m+[m[32m            setMovieList(data.results);[m
[32m+[m[32m            setTotalPages(data.total_pages); // Set total pages from API response[m
[32m+[m
[32m+[m[32m        }catch (error) {[m
[32m+[m[32m            console.log(`Error fetching movies: ${error}`);[m
[32m+[m[32m            setErrorMessage('Could not fetch movies. Please try again later.');[m
[32m+[m[32m        }finally {[m
[32m+[m[32m            setIsLoading(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        fetchMovies(debounceSearchTerm, page);[m
[32m+[m[32m    }, [debounceSearchTerm, page]);[m
[32m+[m
[32m+[m[32m    const handlePageClick = (newPage) => {[m
[32m+[m[32m        if (newPage >= 1 && newPage <= totalPages) {[m
[32m+[m[32m            setPage(newPage);[m
[32m+[m[32m        }[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m
[32m+[m[32m    // Generate page numbers to display[m
[32m+[m[32m    const generatePageNumbers = () => {[m
[32m+[m[32m        const pages = [];[m
[32m+[m[32m        const maxVisiblePages = 5; // Number of visible page buttons[m
[32m+[m[32m        let startPage = Math.max(1, page - Math.floor(maxVisiblePages / 2));[m
[32m+[m[32m        let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);[m
[32m+[m
[32m+[m[32m        if (endPage - startPage + 1 < maxVisiblePages) {[m
[32m+[m[32m            startPage = Math.max(1, endPage - maxVisiblePages + 1);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        for (let i = startPage; i <= endPage; i++) {[m
[32m+[m[32m            pages.push(i);[m
[32m+[m[32m        }[m
[32m+[m
[32m+[m[32m        return pages;[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m        <main>[m
[32m+[m
[32m+[m[32m            <div className="pattern" />[m
[32m+[m
[32m+[m[32m            <div className="wrapper">[m
[32m+[m[32m                <header>[m
[32m+[m[32m                    <img src="./hero.png" alt="Hero Banner" />[m
[32m+[m[32m                    <h1>Find <span className="text-gradient">Movies</span> You will Enjoy Without The Hassle</h1>[m
[32m+[m
[32m+[m[32m                    <Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />[m
[32m+[m[32m                </header>[m
[32m+[m
[32m+[m[32m                <section className="all-movies">[m
[32m+[m[32m                    <h2 className="mt-[20px]">All Movies</h2>[m
[32m+[m
[32m+[m[32m                    { isLoading ? ([m
[32m+[m[32m                        <Spinner />[m
[32m+[m[32m                    ) : errorMessage ? ([m
[32m+[m[32m                        <p className="text-red-500">{errorMessage}</p>[m
[32m+[m[32m                    ) : ([m
[32m+[m[32m                        <ul>[m
[32m+[m[32m                            {movieList[m
[32m+[m[32m                                .map((movie) => ([m
[32m+[m[32m                                    <Link to={`/movie/${movie.id}`} key={movie.id}> {/* Wrap MovieCard in Link */}[m
[32m+[m[32m                                        <MovieCard movie={movie} />[m
[32m+[m[32m                                    </Link>[m
[32m+[m[32m                                ))}[m
[32m+[m[32m                        </ul>[m
[32m+[m[32m                    )}[m
[32m+[m
[32m+[m[32m                    {/* Pagination Controls */}[m
[32m+[m[32m                    <div className="pagination">[m
[32m+[m[32m                        <button[m
[32m+[m[32m                            onClick={() => handlePageClick(page - 1)}[m
[32m+[m[32m                            disabled={page === 1 || isLoading}[m
[32m+[m[32m                            className="pagination-button"[m
[32m+[m[32m                        >[m
[32m+[m[32m                            Previous[m
[32m+[m[32m                        </button>[m
[32m+[m
[32m+[m[32m                        {/* Page Numbers */}[m
[32m+[m[32m                        {generatePageNumbers().map((pageNumber) => ([m
[32m+[m[32m                            <button[m
[32m+[m[32m                                key={pageNumber}[m
[32m+[m[32m                                onClick={() => handlePageClick(pageNumber)}[m
[32m+[m[32m                                disabled={pageNumber === page || isLoading}[m
[32m+[m[32m                                className={`pagination-button ${pageNumber === page ? 'active' : ''}`}[m
[32m+[m[32m                            >[m
[32m+[m[32m                                {pageNumber}[m
[32m+[m[32m                            </button>[m
[32m+[m[32m                        ))}[m
[32m+[m
[32m+[m[32m                        <button[m
[32m+[m[32m                            onClick={() => handlePageClick(page + 1)}[m
[32m+[m[32m                            disabled={page === totalPages || isLoading}[m
[32m+[m[32m                            className="pagination-button"[m
[32m+[m[32m                        >[m
[32m+[m[32m                            Next[m
[32m+[m[32m                        </button>[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </section>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </main>[m
[32m+[m[32m    )[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default Home;[m
[1mdiff --git a/src/pages/MovieDetailsPage.jsx b/src/pages/MovieDetailsPage.jsx[m
[1mindex e69de29..ec8f06e 100644[m
[1m--- a/src/pages/MovieDetailsPage.jsx[m
[1m+++ b/src/pages/MovieDetailsPage.jsx[m
[36m@@ -0,0 +1,211 @@[m
[32m+[m[32mimport React, { useEffect, useState } from 'react';[m
[32m+[m[32mimport { useParams, useNavigate } from 'react-router-dom';[m
[32m+[m[32mimport Spinner from "../components/Spinner.jsx";[m
[32m+[m
[32m+[m[32mconst API_BASE_URL = 'https://api.themoviedb.org/3';[m
[32m+[m[32mconst API_KEY = import.meta.env.VITE_TMDB_API_KEY;[m
[32m+[m[32mconst API_OPTIONS = {[m
[32m+[m[32m    method: 'GET',[m
[32m+[m[32m    headers: {[m
[32m+[m[32m        accept: 'application/json',[m
[32m+[m[32m        authorization: `Bearer ${API_KEY}`,[m
[32m+[m[32m    }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mconst MovieDetailsPage = () => {[m
[32m+[m[32m    const { id } = useParams();[m
[32m+[m[32m    const navigate = useNavigate();[m
[32m+[m[32m    const [movie, setMovie] = useState(null);[m
[32m+[m[32m    const [credits, setCredits] = useState(null);[m
[32m+[m[32m    const [isLoading, setIsLoading] = useState(true);[m
[32m+[m[32m    const [error, setError] = useState('');[m
[32m+[m[32m    const [similarMovies, setSimilarMovies] = useState([]);[m
[32m+[m[32m    const [trailerKey, setTrailerKey] = useState(null); // State to store the YouTube trailer key[m
[32m+[m
[32m+[m[32m    const fetchMovieDetails = async () => {[m
[32m+[m[32m        setIsLoading(true);[m
[32m+[m[32m        setError('');[m
[32m+[m
[32m+[m[32m        try {[m
[32m+[m[32m            // Fetch movie details[m
[32m+[m[32m            const movieResponse = await fetch(`${API_BASE_URL}/movie/${id}`, API_OPTIONS);[m
[32m+[m[32m            if (!movieResponse.ok) {[m
[32m+[m[32m                throw new Error("Could not fetch movie details");[m
[32m+[m[32m            }[m
[32m+[m[32m            const movieData = await movieResponse.json();[m
[32m+[m
[32m+[m[32m            // Fetch movie credits[m
[32m+[m[32m            const creditsResponse = await fetch(`${API_BASE_URL}/movie/${id}/credits`, API_OPTIONS);[m
[32m+[m[32m            if (!creditsResponse.ok) {[m
[32m+[m[32m                throw new Error("Could not fetch movie credits");[m
[32m+[m[32m            }[m
[32m+[m[32m            const creditsData = await creditsResponse.json();[m
[32m+[m
[32m+[m[32m            // Fetch similar movies[m
[32m+[m[32m            const similarResponse = await fetch(`${API_BASE_URL}/movie/${id}/similar`, API_OPTIONS);[m
[32m+[m[32m            if (!similarResponse.ok) {[m
[32m+[m[32m                throw new Error("Could not fetch similar movies");[m
[32m+[m[32m            }[m
[32m+[m[32m            const similarData = await similarResponse.json();[m
[32m+[m
[32m+[m[32m            // Fetch movie videos (trailers)[m
[32m+[m[32m            const videosResponse = await fetch(`${API_BASE_URL}/movie/${id}/videos`, API_OPTIONS);[m
[32m+[m[32m            if (!videosResponse.ok) {[m
[32m+[m[32m                throw new Error("Could not fetch movie videos");[m
[32m+[m[32m            }[m
[32m+[m[32m            const videosData = await videosResponse.json();[m
[32m+[m
[32m+[m[32m            // Find the official trailer (YouTube)[m
[32m+[m[32m            const trailer = videosData.results.find([m
[32m+[m[32m                (video) => video.type === "Trailer" && video.site === "YouTube"[m
[32m+[m[32m            );[m
[32m+[m
[32m+[m[32m            setMovie(movieData);[m
[32m+[m[32m            setCredits(creditsData);[m
[32m+[m[32m            setSimilarMovies(similarData.results);[m
[32m+[m[32m            setTrailerKey(trailer?.key); // Set the YouTube trailer key (if found)[m
[32m+[m[32m        } catch (error) {[m
[32m+[m[32m            console.log(`Error fetching movie details: ${error}`);[m
[32m+[m[32m            setError('Could not fetch movie details. Please try again later.');[m
[32m+[m[32m        } finally {[m
[32m+[m[32m            setIsLoading(false);[m
[32m+[m[32m        }[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    useEffect(() => {[m
[32m+[m[32m        fetchMovieDetails();[m
[32m+[m[32m    }, [id]);[m
[32m+[m
[32m+[m[32m    // Function to handle clicking on a similar movie[m
[32m+[m[32m    const handleSimilarMovieClick = (movieId) => {[m
[32m+[m[32m        navigate(`/movie/${movieId}`);[m
[32m+[m[32m    };[m
[32m+[m
[32m+[m[32m    if (isLoading) {[m
[32m+[m[32m        return ([m
[32m+[m[32m            <div className="flex justify-center items-center h-screen">[m
[32m+[m[32m                <Spinner />[m
[32m+[m[32m            </div>[m
[32m+[m[32m        );[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    if (error) {[m
[32m+[m[32m        return <div className="text-red-500">{error}</div>;[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    // Get the director from the credits[m
[32m+[m[32m    const director = credits.crew.find((member) => member.job === 'Director');[m
[32m+[m
[32m+[m[32m    return ([m
[32m+[m[32m        <div className="movie-details p-8 bg-dark-100 text-white">[m
[32m+[m[32m            {/* Back Button */}[m
[32m+[m[32m            <button onClick={() => navigate(-1)} className="mb-8 px-4 py-2 bg-light-100/10 text-light-200 rounded-lg">[m
[32m+[m[32m                Back to Home[m
[32m+[m[32m            </button>[m
[32m+[m
[32m+[m[32m            {/* Movie Header */}[m
[32m+[m[32m            <div className="flex flex-col md:flex-row gap-8">[m
[32m+[m[32m                {/* Poster */}[m
[32m+[m[32m                <img[m
[32m+[m[32m                    src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}[m
[32m+[m[32m                    alt={movie.title}[m
[32m+[m[32m                    className="w-full md:w-1/3 rounded-lg"[m
[32m+[m[32m                />[m
[32m+[m
[32m+[m[32m                {/* Details */}[m
[32m+[m[32m                <div className="flex-1">[m
[32m+[m[32m                    <h1 className="text-4xl font-bold">{movie.title}</h1>[m
[32m+[m[32m                    <p className="mt-2 text-light-200">{movie.tagline}</p>[m
[32m+[m
[32m+[m[32m                    {/* Metadata */}[m
[32m+[m[32m                    <div className="mt-4 flex flex-wrap gap-4">[m
[32m+[m[32m                        <span className="text-light-200">{movie.release_date}</span>[m
[32m+[m[32m                        <span className="text-light-200">{movie.runtime} minutes</span>[m
[32m+[m[32m                        <span className="text-light-200">{movie.vote_average}/10</span>[m
[32m+[m[32m                        <div className="flex gap-2">[m
[32m+[m[32m                            {movie.genres.map((genre) => ([m
[32m+[m[32m                                <span key={genre.id} className="px-2 py-1 bg-light-100/10 rounded">[m
[32m+[m[32m                                    {genre.name}[m
[32m+[m[32m                                </span>[m
[32m+[m[32m                            ))}[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m
[32m+[m[32m                    {/* Overview */}[m
[32m+[m[32m                    <p className="mt-6 text-light-200">{movie.overview}</p>[m
[32m+[m
[32m+[m[32m                    {/* Director */}[m
[32m+[m[32m                    {director && ([m
[32m+[m[32m                        <div className="mt-6">[m
[32m+[m[32m                            <h2 className="text-xl font-bold">Director</h2>[m
[32m+[m[32m                            <p className="text-light-200">{director.name}</p>[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    )}[m
[32m+[m
[32m+[m[32m                    {/* Trailer */}[m
[32m+[m[32m                    <div className="mt-6">[m
[32m+[m[32m                        <h2 className="text-xl font-bold">Trailer</h2>[m
[32m+[m[32m                        {trailerKey ? ([m
[32m+[m[32m                            <div className="mt-4 aspect-video w-full max-w-2xl">[m
[32m+[m[32m                                <iframe[m
[32m+[m[32m                                    src={`https://www.youtube.com/embed/${trailerKey}`}[m
[32m+[m[32m                                    title="Movie Trailer"[m
[32m+[m[32m                                    allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"[m
[32m+[m[32m                                    allowFullScreen[m
[32m+[m[32m                                    className="w-full h-full rounded-lg"[m
[32m+[m[32m                                ></iframe>[m
[32m+[m[32m                            </div>[m
[32m+[m[32m                        ) : ([m
[32m+[m[32m                            <p className="text-light-200">No trailer available.</p>[m
[32m+[m[32m                        )}[m
[32m+[m[32m                    </div>[m
[32m+[m
[32m+[m[32m                    {/* Cast */}[m
[32m+[m[32m                    <div className="mt-6">[m
[32m+[m[32m                        <h2 className="text-xl font-bold">Cast</h2>[m
[32m+[m[32m                        <div className="flex flex-wrap gap-4 mt-4">[m
[32m+[m[32m                            {credits.cast.slice(0, 10).map((actor) => ([m
[32m+[m[32m                                <div key={actor.id} className="flex flex-col items-center">[m
[32m+[m[32m                                    <img[m
[32m+[m[32m                                        src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}[m
[32m+[m[32m                                        alt={actor.name}[m
[32m+[m[32m                                        className="w-24 h-24 rounded-full object-cover"[m
[32m+[m[32m                                    />[m
[32m+[m[32m                                    <p className="mt-2 text-center text-light-200">{actor.name}</p>[m
[32m+[m[32m                                    <p className="text-sm text-gray-100">{actor.character}</p>[m
[32m+[m[32m                                </div>[m
[32m+[m[32m                            ))}[m
[32m+[m[32m                        </div>[m
[32m+[m[32m                    </div>[m
[32m+[m
[32m+[m[32m                    {/* Similar Movies */}[m
[32m+[m[32m                    <div className="mt-6">[m
[32m+[m[32m                        <h2 className="text-xl font-bold">Similar Movies</h2>[m
[32m+[m[32m                        {similarMovies.length > 0 ? ([m
[32m+[m[32m                            <div className="flex flex-wrap gap-4 mt-4">[m
[32m+[m[32m                                {similarMovies.slice(0, 5).map((similarMovie) => ([m
[32m+[m[32m                                    <div[m
[32m+[m[32m                                        key={similarMovie.id}[m
[32m+[m[32m                                        className="flex flex-col items-center cursor-pointer hover:opacity-80"[m
[32m+[m[32m                                        onClick={() => handleSimilarMovieClick(similarMovie.id)}[m
[32m+[m[32m                                    >[m
[32m+[m[32m                                        <img[m
[32m+[m[32m                                            src={`https://image.tmdb.org/t/p/w200${similarMovie.poster_path}`}[m
[32m+[m[32m                                            alt={similarMovie.title}[m
[32m+[m[32m                                            className="w-24 h-24 rounded-lg object-cover"[m
[32m+[m[32m                                        />[m
[32m+[m[32m                                        <p className="mt-2 text-center text-light-200">{similarMovie.title}</p>[m
[32m+[m[32m                                    </div>[m
[32m+[m[32m                                ))}[m
[32m+[m[32m                            </div>[m
[32m+[m[32m                        ) : ([m
[32m+[m[32m                            <p className="text-light-200">No similar movies found.</p>[m
[32m+[m[32m                        )}[m
[32m+[m[32m                    </div>[m
[32m+[m[32m                </div>[m
[32m+[m[32m            </div>[m
[32m+[m[32m        </div>[m
[32m+[m[32m    );[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport default MovieDetailsPage;[m
\ No newline at end of file[m
